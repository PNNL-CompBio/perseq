# the location of pair-end FASTQ files to annotate
data: tests/data
# individual process threads
threads: 8
# specify a number that represents GBs of available RAM
java_mem: 16
#number of reads to subsample by
subsample: 60000
# adapter trimming occurs after successful sequence merge
adapters: resources/adapters.fa
contaminant_references:
    PhiX: resources/phix.fa
    rRNA: resources/rrna.fa.gz
# contains kaiju_db.fmi, nodes.dmp, and names.dmp
# makeDB.sh -e
kaijudb: tests/refdata
# cat ftp.bioinformatics.jp/kegg/genes/fasta/family_eukaryotes.pep.gz ftp.bioinformatics.jp/kegg/genes/fasta/genus_prokaryotes.pep.gz > temp
# python scripts/filter_kegg_fa.py ftp.bioinformatics.jp/kegg/genes/misc/taxonomy temp > kegg_feukaryotes_gprokaryotes.faa
diamonddb: tests/refdata/kegg_feukaryotes_gprokaryotes.faa
# links genes (hsa:578) to KO (ko:K14021)
# this file could also be created using their RESTful interface by looking up all KOs at http://rest.kegg.jp/link/genes/K14021; perseq's expectation is for species to be in column 1 and KO to be in column 2
# ftp.bioinformatics.jp/kegg/genes/links/genes_ko.list.gz
gene2ko: tests/refdata/genes_ko.list.gz
# defines KO and the KO's description
# curl http://rest.kegg.jp/list/ko > ko_list.txt
ko_list: resources/ko_list.txt.gz
# links KEGG's species code with NCBI's
# curl http://rest.kegg.jp/list/genome | gzip > genome_list.txt.gz
genome_list: resources/genome_list.txt.gz
# curl ftp://ftp.expasy.org/databases/enzyme/enzyme.dat | gzip > enzyme.dat.gz
enzyme_dat_file: resources/enzyme.dat.gz
# curl ftp://ftp.expasy.org/databases/enzyme/enzclass.txt | gzip > enzclass.txt.gz
ec_converter: resources/enzclass.txt.gz
